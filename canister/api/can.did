type Event = record {
    name : text;
    timestamp : nat64;
    payload : blob;
};

type PushEventsArgs = record {
    events : vec Event;
};

type RemoveEventsArgs = record {
    up_to_inclusive : nat64;
};

type RemoveEventsResponse = record {
    latest_event_index : opt nat64;
    earliest_event_index_stored : opt nat64;
};

type EventsArgs = record {
    start : nat64;
    length : nat64;
};

type IndexedEvent = record {
    index : nat64;
    name : text;
    timestamp : nat64;
    payload : blob;
};

type EventsResponse = record {
    events : vec IndexedEvent;
    latest_event_index : opt nat64;
    earliest_event_index_stored : opt nat64;
};

service : {
    push_events : (PushEventsArgs) -> ();
    remove_events : (RemoveEventsArgs) -> (RemoveEventsResponse);
    events : (EventsArgs) -> (EventsResponse) query;
}